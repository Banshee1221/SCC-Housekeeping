---
- name: Install libraries necessary to compile Torque
  yum: name={{ item }} state=present
  with_items:
    - openssl-devel
    - boost-devel
    - libxml2-devel

- name: Clear out the build directory if it exists
  file: path="{{ torque_compile_dir }}" state=absent

- name: Grab Torque source from github
  git:
    repo: https://github.com/adaptivecomputing/torque.git
    dest: "{{ torque_compile_dir }}"
    version: master

- name: Autogen, configure, make and install
  command: "chdir={{ torque_compile_dir }} {{ item }}"
  with_items:
    - ./autogen.sh
    - ./configure
    - make -j {{ headnode_cores }}
    - libtool --finish /usr/local/lib
    - make install

- name: Add configs for server_name and lib path
  shell: "{{ item }}"
  with_items:
    - touch /var/spool/torque/server_name
    - echo "{{ head_fqdn }}" > /var/spool/torque/server_name
    - echo "/usr/local/lib" > /etc/ld.so.conf.d/torque.conf
    - ldconfig
    - echo "" > /var/spool/torque/server_priv/nodes

- name: Add list of nodes to server_priv
  lineinfile: dest=/var/spool/torque/server_priv/nodes line="{{ item.key }} np={{ item.value.cpus }}" create=yes state=present
  with_dict: "{{ torque_nodelist }}"

- name: Copy the systemd services for the headnode
  copy: src={{ torque_compile_dir }}/contrib/systemd/{{ item }} dest=/usr/lib/systemd/system/{{ item }}
  with_items:
    - trqauthd.service
    - pbs_server.service
    - pbs_sched.service

- name: Enable the services
  shell: "systemctl enable {{ item }}"
  with_items:
    - trqauthd.service
    - pbs_server.service
    - pbs_sched.service

- name: Start trqauthd to do the database setup
  systemd: name=trqauthd.service state=started

- name: Generate the torque database
  expect:
    command: "{{ torque_compile_dir }}/torque.setup root"
    responses:
      do you wish to continue y\/\(n\)?: y


- name: Restart the services and make the packages to send to the compute nodes
  shell: "chdir={{ torque_compile_dir}} {{ item }}"
  with_items:
    - /usr/local/bin/qterm
    - systemctl restart pbs_server.service
    - systemctl restart pbs_sched
    - systemctl restart trqauthd
    - make packages
